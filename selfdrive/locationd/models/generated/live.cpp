#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2197647651745530361) {
   out_2197647651745530361[0] = 0;
   out_2197647651745530361[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2197647651745530361[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2197647651745530361[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2197647651745530361[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2197647651745530361[5] = -sin(in_vec[1]);
   out_2197647651745530361[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2197647651745530361[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2197647651745530361[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2197647651745530361[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2197647651745530361[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2197647651745530361[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2197647651745530361[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2197647651745530361[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2197647651745530361[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2197647651745530361[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2197647651745530361[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2197647651745530361[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_410081131431810136) {
   out_410081131431810136[0] = delta_x[0] + nom_x[0];
   out_410081131431810136[1] = delta_x[1] + nom_x[1];
   out_410081131431810136[2] = delta_x[2] + nom_x[2];
   out_410081131431810136[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_410081131431810136[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_410081131431810136[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_410081131431810136[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_410081131431810136[7] = delta_x[6] + nom_x[7];
   out_410081131431810136[8] = delta_x[7] + nom_x[8];
   out_410081131431810136[9] = delta_x[8] + nom_x[9];
   out_410081131431810136[10] = delta_x[9] + nom_x[10];
   out_410081131431810136[11] = delta_x[10] + nom_x[11];
   out_410081131431810136[12] = delta_x[11] + nom_x[12];
   out_410081131431810136[13] = delta_x[12] + nom_x[13];
   out_410081131431810136[14] = delta_x[13] + nom_x[14];
   out_410081131431810136[15] = delta_x[14] + nom_x[15];
   out_410081131431810136[16] = delta_x[15] + nom_x[16];
   out_410081131431810136[17] = delta_x[16] + nom_x[17];
   out_410081131431810136[18] = delta_x[17] + nom_x[18];
   out_410081131431810136[19] = delta_x[18] + nom_x[19];
   out_410081131431810136[20] = delta_x[19] + nom_x[20];
   out_410081131431810136[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_8196087757170391419) {
   out_8196087757170391419[0] = -nom_x[0] + true_x[0];
   out_8196087757170391419[1] = -nom_x[1] + true_x[1];
   out_8196087757170391419[2] = -nom_x[2] + true_x[2];
   out_8196087757170391419[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_8196087757170391419[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_8196087757170391419[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_8196087757170391419[6] = -nom_x[7] + true_x[7];
   out_8196087757170391419[7] = -nom_x[8] + true_x[8];
   out_8196087757170391419[8] = -nom_x[9] + true_x[9];
   out_8196087757170391419[9] = -nom_x[10] + true_x[10];
   out_8196087757170391419[10] = -nom_x[11] + true_x[11];
   out_8196087757170391419[11] = -nom_x[12] + true_x[12];
   out_8196087757170391419[12] = -nom_x[13] + true_x[13];
   out_8196087757170391419[13] = -nom_x[14] + true_x[14];
   out_8196087757170391419[14] = -nom_x[15] + true_x[15];
   out_8196087757170391419[15] = -nom_x[16] + true_x[16];
   out_8196087757170391419[16] = -nom_x[17] + true_x[17];
   out_8196087757170391419[17] = -nom_x[18] + true_x[18];
   out_8196087757170391419[18] = -nom_x[19] + true_x[19];
   out_8196087757170391419[19] = -nom_x[20] + true_x[20];
   out_8196087757170391419[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4506999560653098295) {
   out_4506999560653098295[0] = 1.0;
   out_4506999560653098295[1] = 0;
   out_4506999560653098295[2] = 0;
   out_4506999560653098295[3] = 0;
   out_4506999560653098295[4] = 0;
   out_4506999560653098295[5] = 0;
   out_4506999560653098295[6] = 0;
   out_4506999560653098295[7] = 0;
   out_4506999560653098295[8] = 0;
   out_4506999560653098295[9] = 0;
   out_4506999560653098295[10] = 0;
   out_4506999560653098295[11] = 0;
   out_4506999560653098295[12] = 0;
   out_4506999560653098295[13] = 0;
   out_4506999560653098295[14] = 0;
   out_4506999560653098295[15] = 0;
   out_4506999560653098295[16] = 0;
   out_4506999560653098295[17] = 0;
   out_4506999560653098295[18] = 0;
   out_4506999560653098295[19] = 0;
   out_4506999560653098295[20] = 0;
   out_4506999560653098295[21] = 0;
   out_4506999560653098295[22] = 1.0;
   out_4506999560653098295[23] = 0;
   out_4506999560653098295[24] = 0;
   out_4506999560653098295[25] = 0;
   out_4506999560653098295[26] = 0;
   out_4506999560653098295[27] = 0;
   out_4506999560653098295[28] = 0;
   out_4506999560653098295[29] = 0;
   out_4506999560653098295[30] = 0;
   out_4506999560653098295[31] = 0;
   out_4506999560653098295[32] = 0;
   out_4506999560653098295[33] = 0;
   out_4506999560653098295[34] = 0;
   out_4506999560653098295[35] = 0;
   out_4506999560653098295[36] = 0;
   out_4506999560653098295[37] = 0;
   out_4506999560653098295[38] = 0;
   out_4506999560653098295[39] = 0;
   out_4506999560653098295[40] = 0;
   out_4506999560653098295[41] = 0;
   out_4506999560653098295[42] = 0;
   out_4506999560653098295[43] = 0;
   out_4506999560653098295[44] = 1.0;
   out_4506999560653098295[45] = 0;
   out_4506999560653098295[46] = 0;
   out_4506999560653098295[47] = 0;
   out_4506999560653098295[48] = 0;
   out_4506999560653098295[49] = 0;
   out_4506999560653098295[50] = 0;
   out_4506999560653098295[51] = 0;
   out_4506999560653098295[52] = 0;
   out_4506999560653098295[53] = 0;
   out_4506999560653098295[54] = 0;
   out_4506999560653098295[55] = 0;
   out_4506999560653098295[56] = 0;
   out_4506999560653098295[57] = 0;
   out_4506999560653098295[58] = 0;
   out_4506999560653098295[59] = 0;
   out_4506999560653098295[60] = 0;
   out_4506999560653098295[61] = 0;
   out_4506999560653098295[62] = 0;
   out_4506999560653098295[63] = 0;
   out_4506999560653098295[64] = 0;
   out_4506999560653098295[65] = 0;
   out_4506999560653098295[66] = -0.5*state[4];
   out_4506999560653098295[67] = -0.5*state[5];
   out_4506999560653098295[68] = -0.5*state[6];
   out_4506999560653098295[69] = 0;
   out_4506999560653098295[70] = 0;
   out_4506999560653098295[71] = 0;
   out_4506999560653098295[72] = 0;
   out_4506999560653098295[73] = 0;
   out_4506999560653098295[74] = 0;
   out_4506999560653098295[75] = 0;
   out_4506999560653098295[76] = 0;
   out_4506999560653098295[77] = 0;
   out_4506999560653098295[78] = 0;
   out_4506999560653098295[79] = 0;
   out_4506999560653098295[80] = 0;
   out_4506999560653098295[81] = 0;
   out_4506999560653098295[82] = 0;
   out_4506999560653098295[83] = 0;
   out_4506999560653098295[84] = 0;
   out_4506999560653098295[85] = 0;
   out_4506999560653098295[86] = 0;
   out_4506999560653098295[87] = 0.5*state[3];
   out_4506999560653098295[88] = 0.5*state[6];
   out_4506999560653098295[89] = -0.5*state[5];
   out_4506999560653098295[90] = 0;
   out_4506999560653098295[91] = 0;
   out_4506999560653098295[92] = 0;
   out_4506999560653098295[93] = 0;
   out_4506999560653098295[94] = 0;
   out_4506999560653098295[95] = 0;
   out_4506999560653098295[96] = 0;
   out_4506999560653098295[97] = 0;
   out_4506999560653098295[98] = 0;
   out_4506999560653098295[99] = 0;
   out_4506999560653098295[100] = 0;
   out_4506999560653098295[101] = 0;
   out_4506999560653098295[102] = 0;
   out_4506999560653098295[103] = 0;
   out_4506999560653098295[104] = 0;
   out_4506999560653098295[105] = 0;
   out_4506999560653098295[106] = 0;
   out_4506999560653098295[107] = 0;
   out_4506999560653098295[108] = -0.5*state[6];
   out_4506999560653098295[109] = 0.5*state[3];
   out_4506999560653098295[110] = 0.5*state[4];
   out_4506999560653098295[111] = 0;
   out_4506999560653098295[112] = 0;
   out_4506999560653098295[113] = 0;
   out_4506999560653098295[114] = 0;
   out_4506999560653098295[115] = 0;
   out_4506999560653098295[116] = 0;
   out_4506999560653098295[117] = 0;
   out_4506999560653098295[118] = 0;
   out_4506999560653098295[119] = 0;
   out_4506999560653098295[120] = 0;
   out_4506999560653098295[121] = 0;
   out_4506999560653098295[122] = 0;
   out_4506999560653098295[123] = 0;
   out_4506999560653098295[124] = 0;
   out_4506999560653098295[125] = 0;
   out_4506999560653098295[126] = 0;
   out_4506999560653098295[127] = 0;
   out_4506999560653098295[128] = 0;
   out_4506999560653098295[129] = 0.5*state[5];
   out_4506999560653098295[130] = -0.5*state[4];
   out_4506999560653098295[131] = 0.5*state[3];
   out_4506999560653098295[132] = 0;
   out_4506999560653098295[133] = 0;
   out_4506999560653098295[134] = 0;
   out_4506999560653098295[135] = 0;
   out_4506999560653098295[136] = 0;
   out_4506999560653098295[137] = 0;
   out_4506999560653098295[138] = 0;
   out_4506999560653098295[139] = 0;
   out_4506999560653098295[140] = 0;
   out_4506999560653098295[141] = 0;
   out_4506999560653098295[142] = 0;
   out_4506999560653098295[143] = 0;
   out_4506999560653098295[144] = 0;
   out_4506999560653098295[145] = 0;
   out_4506999560653098295[146] = 0;
   out_4506999560653098295[147] = 0;
   out_4506999560653098295[148] = 0;
   out_4506999560653098295[149] = 0;
   out_4506999560653098295[150] = 0;
   out_4506999560653098295[151] = 0;
   out_4506999560653098295[152] = 0;
   out_4506999560653098295[153] = 1.0;
   out_4506999560653098295[154] = 0;
   out_4506999560653098295[155] = 0;
   out_4506999560653098295[156] = 0;
   out_4506999560653098295[157] = 0;
   out_4506999560653098295[158] = 0;
   out_4506999560653098295[159] = 0;
   out_4506999560653098295[160] = 0;
   out_4506999560653098295[161] = 0;
   out_4506999560653098295[162] = 0;
   out_4506999560653098295[163] = 0;
   out_4506999560653098295[164] = 0;
   out_4506999560653098295[165] = 0;
   out_4506999560653098295[166] = 0;
   out_4506999560653098295[167] = 0;
   out_4506999560653098295[168] = 0;
   out_4506999560653098295[169] = 0;
   out_4506999560653098295[170] = 0;
   out_4506999560653098295[171] = 0;
   out_4506999560653098295[172] = 0;
   out_4506999560653098295[173] = 0;
   out_4506999560653098295[174] = 0;
   out_4506999560653098295[175] = 1.0;
   out_4506999560653098295[176] = 0;
   out_4506999560653098295[177] = 0;
   out_4506999560653098295[178] = 0;
   out_4506999560653098295[179] = 0;
   out_4506999560653098295[180] = 0;
   out_4506999560653098295[181] = 0;
   out_4506999560653098295[182] = 0;
   out_4506999560653098295[183] = 0;
   out_4506999560653098295[184] = 0;
   out_4506999560653098295[185] = 0;
   out_4506999560653098295[186] = 0;
   out_4506999560653098295[187] = 0;
   out_4506999560653098295[188] = 0;
   out_4506999560653098295[189] = 0;
   out_4506999560653098295[190] = 0;
   out_4506999560653098295[191] = 0;
   out_4506999560653098295[192] = 0;
   out_4506999560653098295[193] = 0;
   out_4506999560653098295[194] = 0;
   out_4506999560653098295[195] = 0;
   out_4506999560653098295[196] = 0;
   out_4506999560653098295[197] = 1.0;
   out_4506999560653098295[198] = 0;
   out_4506999560653098295[199] = 0;
   out_4506999560653098295[200] = 0;
   out_4506999560653098295[201] = 0;
   out_4506999560653098295[202] = 0;
   out_4506999560653098295[203] = 0;
   out_4506999560653098295[204] = 0;
   out_4506999560653098295[205] = 0;
   out_4506999560653098295[206] = 0;
   out_4506999560653098295[207] = 0;
   out_4506999560653098295[208] = 0;
   out_4506999560653098295[209] = 0;
   out_4506999560653098295[210] = 0;
   out_4506999560653098295[211] = 0;
   out_4506999560653098295[212] = 0;
   out_4506999560653098295[213] = 0;
   out_4506999560653098295[214] = 0;
   out_4506999560653098295[215] = 0;
   out_4506999560653098295[216] = 0;
   out_4506999560653098295[217] = 0;
   out_4506999560653098295[218] = 0;
   out_4506999560653098295[219] = 1.0;
   out_4506999560653098295[220] = 0;
   out_4506999560653098295[221] = 0;
   out_4506999560653098295[222] = 0;
   out_4506999560653098295[223] = 0;
   out_4506999560653098295[224] = 0;
   out_4506999560653098295[225] = 0;
   out_4506999560653098295[226] = 0;
   out_4506999560653098295[227] = 0;
   out_4506999560653098295[228] = 0;
   out_4506999560653098295[229] = 0;
   out_4506999560653098295[230] = 0;
   out_4506999560653098295[231] = 0;
   out_4506999560653098295[232] = 0;
   out_4506999560653098295[233] = 0;
   out_4506999560653098295[234] = 0;
   out_4506999560653098295[235] = 0;
   out_4506999560653098295[236] = 0;
   out_4506999560653098295[237] = 0;
   out_4506999560653098295[238] = 0;
   out_4506999560653098295[239] = 0;
   out_4506999560653098295[240] = 0;
   out_4506999560653098295[241] = 1.0;
   out_4506999560653098295[242] = 0;
   out_4506999560653098295[243] = 0;
   out_4506999560653098295[244] = 0;
   out_4506999560653098295[245] = 0;
   out_4506999560653098295[246] = 0;
   out_4506999560653098295[247] = 0;
   out_4506999560653098295[248] = 0;
   out_4506999560653098295[249] = 0;
   out_4506999560653098295[250] = 0;
   out_4506999560653098295[251] = 0;
   out_4506999560653098295[252] = 0;
   out_4506999560653098295[253] = 0;
   out_4506999560653098295[254] = 0;
   out_4506999560653098295[255] = 0;
   out_4506999560653098295[256] = 0;
   out_4506999560653098295[257] = 0;
   out_4506999560653098295[258] = 0;
   out_4506999560653098295[259] = 0;
   out_4506999560653098295[260] = 0;
   out_4506999560653098295[261] = 0;
   out_4506999560653098295[262] = 0;
   out_4506999560653098295[263] = 1.0;
   out_4506999560653098295[264] = 0;
   out_4506999560653098295[265] = 0;
   out_4506999560653098295[266] = 0;
   out_4506999560653098295[267] = 0;
   out_4506999560653098295[268] = 0;
   out_4506999560653098295[269] = 0;
   out_4506999560653098295[270] = 0;
   out_4506999560653098295[271] = 0;
   out_4506999560653098295[272] = 0;
   out_4506999560653098295[273] = 0;
   out_4506999560653098295[274] = 0;
   out_4506999560653098295[275] = 0;
   out_4506999560653098295[276] = 0;
   out_4506999560653098295[277] = 0;
   out_4506999560653098295[278] = 0;
   out_4506999560653098295[279] = 0;
   out_4506999560653098295[280] = 0;
   out_4506999560653098295[281] = 0;
   out_4506999560653098295[282] = 0;
   out_4506999560653098295[283] = 0;
   out_4506999560653098295[284] = 0;
   out_4506999560653098295[285] = 1.0;
   out_4506999560653098295[286] = 0;
   out_4506999560653098295[287] = 0;
   out_4506999560653098295[288] = 0;
   out_4506999560653098295[289] = 0;
   out_4506999560653098295[290] = 0;
   out_4506999560653098295[291] = 0;
   out_4506999560653098295[292] = 0;
   out_4506999560653098295[293] = 0;
   out_4506999560653098295[294] = 0;
   out_4506999560653098295[295] = 0;
   out_4506999560653098295[296] = 0;
   out_4506999560653098295[297] = 0;
   out_4506999560653098295[298] = 0;
   out_4506999560653098295[299] = 0;
   out_4506999560653098295[300] = 0;
   out_4506999560653098295[301] = 0;
   out_4506999560653098295[302] = 0;
   out_4506999560653098295[303] = 0;
   out_4506999560653098295[304] = 0;
   out_4506999560653098295[305] = 0;
   out_4506999560653098295[306] = 0;
   out_4506999560653098295[307] = 1.0;
   out_4506999560653098295[308] = 0;
   out_4506999560653098295[309] = 0;
   out_4506999560653098295[310] = 0;
   out_4506999560653098295[311] = 0;
   out_4506999560653098295[312] = 0;
   out_4506999560653098295[313] = 0;
   out_4506999560653098295[314] = 0;
   out_4506999560653098295[315] = 0;
   out_4506999560653098295[316] = 0;
   out_4506999560653098295[317] = 0;
   out_4506999560653098295[318] = 0;
   out_4506999560653098295[319] = 0;
   out_4506999560653098295[320] = 0;
   out_4506999560653098295[321] = 0;
   out_4506999560653098295[322] = 0;
   out_4506999560653098295[323] = 0;
   out_4506999560653098295[324] = 0;
   out_4506999560653098295[325] = 0;
   out_4506999560653098295[326] = 0;
   out_4506999560653098295[327] = 0;
   out_4506999560653098295[328] = 0;
   out_4506999560653098295[329] = 1.0;
   out_4506999560653098295[330] = 0;
   out_4506999560653098295[331] = 0;
   out_4506999560653098295[332] = 0;
   out_4506999560653098295[333] = 0;
   out_4506999560653098295[334] = 0;
   out_4506999560653098295[335] = 0;
   out_4506999560653098295[336] = 0;
   out_4506999560653098295[337] = 0;
   out_4506999560653098295[338] = 0;
   out_4506999560653098295[339] = 0;
   out_4506999560653098295[340] = 0;
   out_4506999560653098295[341] = 0;
   out_4506999560653098295[342] = 0;
   out_4506999560653098295[343] = 0;
   out_4506999560653098295[344] = 0;
   out_4506999560653098295[345] = 0;
   out_4506999560653098295[346] = 0;
   out_4506999560653098295[347] = 0;
   out_4506999560653098295[348] = 0;
   out_4506999560653098295[349] = 0;
   out_4506999560653098295[350] = 0;
   out_4506999560653098295[351] = 1.0;
   out_4506999560653098295[352] = 0;
   out_4506999560653098295[353] = 0;
   out_4506999560653098295[354] = 0;
   out_4506999560653098295[355] = 0;
   out_4506999560653098295[356] = 0;
   out_4506999560653098295[357] = 0;
   out_4506999560653098295[358] = 0;
   out_4506999560653098295[359] = 0;
   out_4506999560653098295[360] = 0;
   out_4506999560653098295[361] = 0;
   out_4506999560653098295[362] = 0;
   out_4506999560653098295[363] = 0;
   out_4506999560653098295[364] = 0;
   out_4506999560653098295[365] = 0;
   out_4506999560653098295[366] = 0;
   out_4506999560653098295[367] = 0;
   out_4506999560653098295[368] = 0;
   out_4506999560653098295[369] = 0;
   out_4506999560653098295[370] = 0;
   out_4506999560653098295[371] = 0;
   out_4506999560653098295[372] = 0;
   out_4506999560653098295[373] = 1.0;
   out_4506999560653098295[374] = 0;
   out_4506999560653098295[375] = 0;
   out_4506999560653098295[376] = 0;
   out_4506999560653098295[377] = 0;
   out_4506999560653098295[378] = 0;
   out_4506999560653098295[379] = 0;
   out_4506999560653098295[380] = 0;
   out_4506999560653098295[381] = 0;
   out_4506999560653098295[382] = 0;
   out_4506999560653098295[383] = 0;
   out_4506999560653098295[384] = 0;
   out_4506999560653098295[385] = 0;
   out_4506999560653098295[386] = 0;
   out_4506999560653098295[387] = 0;
   out_4506999560653098295[388] = 0;
   out_4506999560653098295[389] = 0;
   out_4506999560653098295[390] = 0;
   out_4506999560653098295[391] = 0;
   out_4506999560653098295[392] = 0;
   out_4506999560653098295[393] = 0;
   out_4506999560653098295[394] = 0;
   out_4506999560653098295[395] = 1.0;
   out_4506999560653098295[396] = 0;
   out_4506999560653098295[397] = 0;
   out_4506999560653098295[398] = 0;
   out_4506999560653098295[399] = 0;
   out_4506999560653098295[400] = 0;
   out_4506999560653098295[401] = 0;
   out_4506999560653098295[402] = 0;
   out_4506999560653098295[403] = 0;
   out_4506999560653098295[404] = 0;
   out_4506999560653098295[405] = 0;
   out_4506999560653098295[406] = 0;
   out_4506999560653098295[407] = 0;
   out_4506999560653098295[408] = 0;
   out_4506999560653098295[409] = 0;
   out_4506999560653098295[410] = 0;
   out_4506999560653098295[411] = 0;
   out_4506999560653098295[412] = 0;
   out_4506999560653098295[413] = 0;
   out_4506999560653098295[414] = 0;
   out_4506999560653098295[415] = 0;
   out_4506999560653098295[416] = 0;
   out_4506999560653098295[417] = 1.0;
   out_4506999560653098295[418] = 0;
   out_4506999560653098295[419] = 0;
   out_4506999560653098295[420] = 0;
   out_4506999560653098295[421] = 0;
   out_4506999560653098295[422] = 0;
   out_4506999560653098295[423] = 0;
   out_4506999560653098295[424] = 0;
   out_4506999560653098295[425] = 0;
   out_4506999560653098295[426] = 0;
   out_4506999560653098295[427] = 0;
   out_4506999560653098295[428] = 0;
   out_4506999560653098295[429] = 0;
   out_4506999560653098295[430] = 0;
   out_4506999560653098295[431] = 0;
   out_4506999560653098295[432] = 0;
   out_4506999560653098295[433] = 0;
   out_4506999560653098295[434] = 0;
   out_4506999560653098295[435] = 0;
   out_4506999560653098295[436] = 0;
   out_4506999560653098295[437] = 0;
   out_4506999560653098295[438] = 0;
   out_4506999560653098295[439] = 1.0;
   out_4506999560653098295[440] = 0;
   out_4506999560653098295[441] = 0;
   out_4506999560653098295[442] = 0;
   out_4506999560653098295[443] = 0;
   out_4506999560653098295[444] = 0;
   out_4506999560653098295[445] = 0;
   out_4506999560653098295[446] = 0;
   out_4506999560653098295[447] = 0;
   out_4506999560653098295[448] = 0;
   out_4506999560653098295[449] = 0;
   out_4506999560653098295[450] = 0;
   out_4506999560653098295[451] = 0;
   out_4506999560653098295[452] = 0;
   out_4506999560653098295[453] = 0;
   out_4506999560653098295[454] = 0;
   out_4506999560653098295[455] = 0;
   out_4506999560653098295[456] = 0;
   out_4506999560653098295[457] = 0;
   out_4506999560653098295[458] = 0;
   out_4506999560653098295[459] = 0;
   out_4506999560653098295[460] = 0;
   out_4506999560653098295[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_3475354349641466463) {
   out_3475354349641466463[0] = dt*state[7] + state[0];
   out_3475354349641466463[1] = dt*state[8] + state[1];
   out_3475354349641466463[2] = dt*state[9] + state[2];
   out_3475354349641466463[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_3475354349641466463[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_3475354349641466463[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_3475354349641466463[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_3475354349641466463[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_3475354349641466463[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_3475354349641466463[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_3475354349641466463[10] = state[10];
   out_3475354349641466463[11] = state[11];
   out_3475354349641466463[12] = state[12];
   out_3475354349641466463[13] = state[13];
   out_3475354349641466463[14] = state[14];
   out_3475354349641466463[15] = state[15];
   out_3475354349641466463[16] = state[16];
   out_3475354349641466463[17] = state[17];
   out_3475354349641466463[18] = state[18];
   out_3475354349641466463[19] = state[19];
   out_3475354349641466463[20] = state[20];
   out_3475354349641466463[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6177591270598375438) {
   out_6177591270598375438[0] = 1;
   out_6177591270598375438[1] = 0;
   out_6177591270598375438[2] = 0;
   out_6177591270598375438[3] = 0;
   out_6177591270598375438[4] = 0;
   out_6177591270598375438[5] = 0;
   out_6177591270598375438[6] = dt;
   out_6177591270598375438[7] = 0;
   out_6177591270598375438[8] = 0;
   out_6177591270598375438[9] = 0;
   out_6177591270598375438[10] = 0;
   out_6177591270598375438[11] = 0;
   out_6177591270598375438[12] = 0;
   out_6177591270598375438[13] = 0;
   out_6177591270598375438[14] = 0;
   out_6177591270598375438[15] = 0;
   out_6177591270598375438[16] = 0;
   out_6177591270598375438[17] = 0;
   out_6177591270598375438[18] = 0;
   out_6177591270598375438[19] = 0;
   out_6177591270598375438[20] = 0;
   out_6177591270598375438[21] = 0;
   out_6177591270598375438[22] = 1;
   out_6177591270598375438[23] = 0;
   out_6177591270598375438[24] = 0;
   out_6177591270598375438[25] = 0;
   out_6177591270598375438[26] = 0;
   out_6177591270598375438[27] = 0;
   out_6177591270598375438[28] = dt;
   out_6177591270598375438[29] = 0;
   out_6177591270598375438[30] = 0;
   out_6177591270598375438[31] = 0;
   out_6177591270598375438[32] = 0;
   out_6177591270598375438[33] = 0;
   out_6177591270598375438[34] = 0;
   out_6177591270598375438[35] = 0;
   out_6177591270598375438[36] = 0;
   out_6177591270598375438[37] = 0;
   out_6177591270598375438[38] = 0;
   out_6177591270598375438[39] = 0;
   out_6177591270598375438[40] = 0;
   out_6177591270598375438[41] = 0;
   out_6177591270598375438[42] = 0;
   out_6177591270598375438[43] = 0;
   out_6177591270598375438[44] = 1;
   out_6177591270598375438[45] = 0;
   out_6177591270598375438[46] = 0;
   out_6177591270598375438[47] = 0;
   out_6177591270598375438[48] = 0;
   out_6177591270598375438[49] = 0;
   out_6177591270598375438[50] = dt;
   out_6177591270598375438[51] = 0;
   out_6177591270598375438[52] = 0;
   out_6177591270598375438[53] = 0;
   out_6177591270598375438[54] = 0;
   out_6177591270598375438[55] = 0;
   out_6177591270598375438[56] = 0;
   out_6177591270598375438[57] = 0;
   out_6177591270598375438[58] = 0;
   out_6177591270598375438[59] = 0;
   out_6177591270598375438[60] = 0;
   out_6177591270598375438[61] = 0;
   out_6177591270598375438[62] = 0;
   out_6177591270598375438[63] = 0;
   out_6177591270598375438[64] = 0;
   out_6177591270598375438[65] = 0;
   out_6177591270598375438[66] = 1;
   out_6177591270598375438[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6177591270598375438[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6177591270598375438[69] = 0;
   out_6177591270598375438[70] = 0;
   out_6177591270598375438[71] = 0;
   out_6177591270598375438[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6177591270598375438[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6177591270598375438[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6177591270598375438[75] = 0;
   out_6177591270598375438[76] = 0;
   out_6177591270598375438[77] = 0;
   out_6177591270598375438[78] = 0;
   out_6177591270598375438[79] = 0;
   out_6177591270598375438[80] = 0;
   out_6177591270598375438[81] = 0;
   out_6177591270598375438[82] = 0;
   out_6177591270598375438[83] = 0;
   out_6177591270598375438[84] = 0;
   out_6177591270598375438[85] = 0;
   out_6177591270598375438[86] = 0;
   out_6177591270598375438[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6177591270598375438[88] = 1;
   out_6177591270598375438[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6177591270598375438[90] = 0;
   out_6177591270598375438[91] = 0;
   out_6177591270598375438[92] = 0;
   out_6177591270598375438[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6177591270598375438[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6177591270598375438[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6177591270598375438[96] = 0;
   out_6177591270598375438[97] = 0;
   out_6177591270598375438[98] = 0;
   out_6177591270598375438[99] = 0;
   out_6177591270598375438[100] = 0;
   out_6177591270598375438[101] = 0;
   out_6177591270598375438[102] = 0;
   out_6177591270598375438[103] = 0;
   out_6177591270598375438[104] = 0;
   out_6177591270598375438[105] = 0;
   out_6177591270598375438[106] = 0;
   out_6177591270598375438[107] = 0;
   out_6177591270598375438[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6177591270598375438[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6177591270598375438[110] = 1;
   out_6177591270598375438[111] = 0;
   out_6177591270598375438[112] = 0;
   out_6177591270598375438[113] = 0;
   out_6177591270598375438[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6177591270598375438[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6177591270598375438[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6177591270598375438[117] = 0;
   out_6177591270598375438[118] = 0;
   out_6177591270598375438[119] = 0;
   out_6177591270598375438[120] = 0;
   out_6177591270598375438[121] = 0;
   out_6177591270598375438[122] = 0;
   out_6177591270598375438[123] = 0;
   out_6177591270598375438[124] = 0;
   out_6177591270598375438[125] = 0;
   out_6177591270598375438[126] = 0;
   out_6177591270598375438[127] = 0;
   out_6177591270598375438[128] = 0;
   out_6177591270598375438[129] = 0;
   out_6177591270598375438[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6177591270598375438[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6177591270598375438[132] = 1;
   out_6177591270598375438[133] = 0;
   out_6177591270598375438[134] = 0;
   out_6177591270598375438[135] = 0;
   out_6177591270598375438[136] = 0;
   out_6177591270598375438[137] = 0;
   out_6177591270598375438[138] = 0;
   out_6177591270598375438[139] = 0;
   out_6177591270598375438[140] = 0;
   out_6177591270598375438[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6177591270598375438[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6177591270598375438[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6177591270598375438[144] = 0;
   out_6177591270598375438[145] = 0;
   out_6177591270598375438[146] = 0;
   out_6177591270598375438[147] = 0;
   out_6177591270598375438[148] = 0;
   out_6177591270598375438[149] = 0;
   out_6177591270598375438[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6177591270598375438[151] = 0;
   out_6177591270598375438[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6177591270598375438[153] = 0;
   out_6177591270598375438[154] = 1;
   out_6177591270598375438[155] = 0;
   out_6177591270598375438[156] = 0;
   out_6177591270598375438[157] = 0;
   out_6177591270598375438[158] = 0;
   out_6177591270598375438[159] = 0;
   out_6177591270598375438[160] = 0;
   out_6177591270598375438[161] = 0;
   out_6177591270598375438[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6177591270598375438[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6177591270598375438[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6177591270598375438[165] = 0;
   out_6177591270598375438[166] = 0;
   out_6177591270598375438[167] = 0;
   out_6177591270598375438[168] = 0;
   out_6177591270598375438[169] = 0;
   out_6177591270598375438[170] = 0;
   out_6177591270598375438[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6177591270598375438[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6177591270598375438[173] = 0;
   out_6177591270598375438[174] = 0;
   out_6177591270598375438[175] = 0;
   out_6177591270598375438[176] = 1;
   out_6177591270598375438[177] = 0;
   out_6177591270598375438[178] = 0;
   out_6177591270598375438[179] = 0;
   out_6177591270598375438[180] = 0;
   out_6177591270598375438[181] = 0;
   out_6177591270598375438[182] = 0;
   out_6177591270598375438[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6177591270598375438[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6177591270598375438[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6177591270598375438[186] = 0;
   out_6177591270598375438[187] = 0;
   out_6177591270598375438[188] = 0;
   out_6177591270598375438[189] = 0;
   out_6177591270598375438[190] = 0;
   out_6177591270598375438[191] = 0;
   out_6177591270598375438[192] = 0;
   out_6177591270598375438[193] = 0;
   out_6177591270598375438[194] = 0;
   out_6177591270598375438[195] = 0;
   out_6177591270598375438[196] = 0;
   out_6177591270598375438[197] = 0;
   out_6177591270598375438[198] = 1;
   out_6177591270598375438[199] = 0;
   out_6177591270598375438[200] = 0;
   out_6177591270598375438[201] = 0;
   out_6177591270598375438[202] = 0;
   out_6177591270598375438[203] = 0;
   out_6177591270598375438[204] = 0;
   out_6177591270598375438[205] = 0;
   out_6177591270598375438[206] = 0;
   out_6177591270598375438[207] = 0;
   out_6177591270598375438[208] = 0;
   out_6177591270598375438[209] = 0;
   out_6177591270598375438[210] = 0;
   out_6177591270598375438[211] = 0;
   out_6177591270598375438[212] = 0;
   out_6177591270598375438[213] = 0;
   out_6177591270598375438[214] = 0;
   out_6177591270598375438[215] = 0;
   out_6177591270598375438[216] = 0;
   out_6177591270598375438[217] = 0;
   out_6177591270598375438[218] = 0;
   out_6177591270598375438[219] = 0;
   out_6177591270598375438[220] = 1;
   out_6177591270598375438[221] = 0;
   out_6177591270598375438[222] = 0;
   out_6177591270598375438[223] = 0;
   out_6177591270598375438[224] = 0;
   out_6177591270598375438[225] = 0;
   out_6177591270598375438[226] = 0;
   out_6177591270598375438[227] = 0;
   out_6177591270598375438[228] = 0;
   out_6177591270598375438[229] = 0;
   out_6177591270598375438[230] = 0;
   out_6177591270598375438[231] = 0;
   out_6177591270598375438[232] = 0;
   out_6177591270598375438[233] = 0;
   out_6177591270598375438[234] = 0;
   out_6177591270598375438[235] = 0;
   out_6177591270598375438[236] = 0;
   out_6177591270598375438[237] = 0;
   out_6177591270598375438[238] = 0;
   out_6177591270598375438[239] = 0;
   out_6177591270598375438[240] = 0;
   out_6177591270598375438[241] = 0;
   out_6177591270598375438[242] = 1;
   out_6177591270598375438[243] = 0;
   out_6177591270598375438[244] = 0;
   out_6177591270598375438[245] = 0;
   out_6177591270598375438[246] = 0;
   out_6177591270598375438[247] = 0;
   out_6177591270598375438[248] = 0;
   out_6177591270598375438[249] = 0;
   out_6177591270598375438[250] = 0;
   out_6177591270598375438[251] = 0;
   out_6177591270598375438[252] = 0;
   out_6177591270598375438[253] = 0;
   out_6177591270598375438[254] = 0;
   out_6177591270598375438[255] = 0;
   out_6177591270598375438[256] = 0;
   out_6177591270598375438[257] = 0;
   out_6177591270598375438[258] = 0;
   out_6177591270598375438[259] = 0;
   out_6177591270598375438[260] = 0;
   out_6177591270598375438[261] = 0;
   out_6177591270598375438[262] = 0;
   out_6177591270598375438[263] = 0;
   out_6177591270598375438[264] = 1;
   out_6177591270598375438[265] = 0;
   out_6177591270598375438[266] = 0;
   out_6177591270598375438[267] = 0;
   out_6177591270598375438[268] = 0;
   out_6177591270598375438[269] = 0;
   out_6177591270598375438[270] = 0;
   out_6177591270598375438[271] = 0;
   out_6177591270598375438[272] = 0;
   out_6177591270598375438[273] = 0;
   out_6177591270598375438[274] = 0;
   out_6177591270598375438[275] = 0;
   out_6177591270598375438[276] = 0;
   out_6177591270598375438[277] = 0;
   out_6177591270598375438[278] = 0;
   out_6177591270598375438[279] = 0;
   out_6177591270598375438[280] = 0;
   out_6177591270598375438[281] = 0;
   out_6177591270598375438[282] = 0;
   out_6177591270598375438[283] = 0;
   out_6177591270598375438[284] = 0;
   out_6177591270598375438[285] = 0;
   out_6177591270598375438[286] = 1;
   out_6177591270598375438[287] = 0;
   out_6177591270598375438[288] = 0;
   out_6177591270598375438[289] = 0;
   out_6177591270598375438[290] = 0;
   out_6177591270598375438[291] = 0;
   out_6177591270598375438[292] = 0;
   out_6177591270598375438[293] = 0;
   out_6177591270598375438[294] = 0;
   out_6177591270598375438[295] = 0;
   out_6177591270598375438[296] = 0;
   out_6177591270598375438[297] = 0;
   out_6177591270598375438[298] = 0;
   out_6177591270598375438[299] = 0;
   out_6177591270598375438[300] = 0;
   out_6177591270598375438[301] = 0;
   out_6177591270598375438[302] = 0;
   out_6177591270598375438[303] = 0;
   out_6177591270598375438[304] = 0;
   out_6177591270598375438[305] = 0;
   out_6177591270598375438[306] = 0;
   out_6177591270598375438[307] = 0;
   out_6177591270598375438[308] = 1;
   out_6177591270598375438[309] = 0;
   out_6177591270598375438[310] = 0;
   out_6177591270598375438[311] = 0;
   out_6177591270598375438[312] = 0;
   out_6177591270598375438[313] = 0;
   out_6177591270598375438[314] = 0;
   out_6177591270598375438[315] = 0;
   out_6177591270598375438[316] = 0;
   out_6177591270598375438[317] = 0;
   out_6177591270598375438[318] = 0;
   out_6177591270598375438[319] = 0;
   out_6177591270598375438[320] = 0;
   out_6177591270598375438[321] = 0;
   out_6177591270598375438[322] = 0;
   out_6177591270598375438[323] = 0;
   out_6177591270598375438[324] = 0;
   out_6177591270598375438[325] = 0;
   out_6177591270598375438[326] = 0;
   out_6177591270598375438[327] = 0;
   out_6177591270598375438[328] = 0;
   out_6177591270598375438[329] = 0;
   out_6177591270598375438[330] = 1;
   out_6177591270598375438[331] = 0;
   out_6177591270598375438[332] = 0;
   out_6177591270598375438[333] = 0;
   out_6177591270598375438[334] = 0;
   out_6177591270598375438[335] = 0;
   out_6177591270598375438[336] = 0;
   out_6177591270598375438[337] = 0;
   out_6177591270598375438[338] = 0;
   out_6177591270598375438[339] = 0;
   out_6177591270598375438[340] = 0;
   out_6177591270598375438[341] = 0;
   out_6177591270598375438[342] = 0;
   out_6177591270598375438[343] = 0;
   out_6177591270598375438[344] = 0;
   out_6177591270598375438[345] = 0;
   out_6177591270598375438[346] = 0;
   out_6177591270598375438[347] = 0;
   out_6177591270598375438[348] = 0;
   out_6177591270598375438[349] = 0;
   out_6177591270598375438[350] = 0;
   out_6177591270598375438[351] = 0;
   out_6177591270598375438[352] = 1;
   out_6177591270598375438[353] = 0;
   out_6177591270598375438[354] = 0;
   out_6177591270598375438[355] = 0;
   out_6177591270598375438[356] = 0;
   out_6177591270598375438[357] = 0;
   out_6177591270598375438[358] = 0;
   out_6177591270598375438[359] = 0;
   out_6177591270598375438[360] = 0;
   out_6177591270598375438[361] = 0;
   out_6177591270598375438[362] = 0;
   out_6177591270598375438[363] = 0;
   out_6177591270598375438[364] = 0;
   out_6177591270598375438[365] = 0;
   out_6177591270598375438[366] = 0;
   out_6177591270598375438[367] = 0;
   out_6177591270598375438[368] = 0;
   out_6177591270598375438[369] = 0;
   out_6177591270598375438[370] = 0;
   out_6177591270598375438[371] = 0;
   out_6177591270598375438[372] = 0;
   out_6177591270598375438[373] = 0;
   out_6177591270598375438[374] = 1;
   out_6177591270598375438[375] = 0;
   out_6177591270598375438[376] = 0;
   out_6177591270598375438[377] = 0;
   out_6177591270598375438[378] = 0;
   out_6177591270598375438[379] = 0;
   out_6177591270598375438[380] = 0;
   out_6177591270598375438[381] = 0;
   out_6177591270598375438[382] = 0;
   out_6177591270598375438[383] = 0;
   out_6177591270598375438[384] = 0;
   out_6177591270598375438[385] = 0;
   out_6177591270598375438[386] = 0;
   out_6177591270598375438[387] = 0;
   out_6177591270598375438[388] = 0;
   out_6177591270598375438[389] = 0;
   out_6177591270598375438[390] = 0;
   out_6177591270598375438[391] = 0;
   out_6177591270598375438[392] = 0;
   out_6177591270598375438[393] = 0;
   out_6177591270598375438[394] = 0;
   out_6177591270598375438[395] = 0;
   out_6177591270598375438[396] = 1;
   out_6177591270598375438[397] = 0;
   out_6177591270598375438[398] = 0;
   out_6177591270598375438[399] = 0;
   out_6177591270598375438[400] = 0;
   out_6177591270598375438[401] = 0;
   out_6177591270598375438[402] = 0;
   out_6177591270598375438[403] = 0;
   out_6177591270598375438[404] = 0;
   out_6177591270598375438[405] = 0;
   out_6177591270598375438[406] = 0;
   out_6177591270598375438[407] = 0;
   out_6177591270598375438[408] = 0;
   out_6177591270598375438[409] = 0;
   out_6177591270598375438[410] = 0;
   out_6177591270598375438[411] = 0;
   out_6177591270598375438[412] = 0;
   out_6177591270598375438[413] = 0;
   out_6177591270598375438[414] = 0;
   out_6177591270598375438[415] = 0;
   out_6177591270598375438[416] = 0;
   out_6177591270598375438[417] = 0;
   out_6177591270598375438[418] = 1;
   out_6177591270598375438[419] = 0;
   out_6177591270598375438[420] = 0;
   out_6177591270598375438[421] = 0;
   out_6177591270598375438[422] = 0;
   out_6177591270598375438[423] = 0;
   out_6177591270598375438[424] = 0;
   out_6177591270598375438[425] = 0;
   out_6177591270598375438[426] = 0;
   out_6177591270598375438[427] = 0;
   out_6177591270598375438[428] = 0;
   out_6177591270598375438[429] = 0;
   out_6177591270598375438[430] = 0;
   out_6177591270598375438[431] = 0;
   out_6177591270598375438[432] = 0;
   out_6177591270598375438[433] = 0;
   out_6177591270598375438[434] = 0;
   out_6177591270598375438[435] = 0;
   out_6177591270598375438[436] = 0;
   out_6177591270598375438[437] = 0;
   out_6177591270598375438[438] = 0;
   out_6177591270598375438[439] = 0;
   out_6177591270598375438[440] = 1;
}
void h_4(double *state, double *unused, double *out_3343835946944536111) {
   out_3343835946944536111[0] = state[10] + state[13];
   out_3343835946944536111[1] = state[11] + state[14];
   out_3343835946944536111[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4681646443276856681) {
   out_4681646443276856681[0] = 0;
   out_4681646443276856681[1] = 0;
   out_4681646443276856681[2] = 0;
   out_4681646443276856681[3] = 0;
   out_4681646443276856681[4] = 0;
   out_4681646443276856681[5] = 0;
   out_4681646443276856681[6] = 0;
   out_4681646443276856681[7] = 0;
   out_4681646443276856681[8] = 0;
   out_4681646443276856681[9] = 0;
   out_4681646443276856681[10] = 1;
   out_4681646443276856681[11] = 0;
   out_4681646443276856681[12] = 0;
   out_4681646443276856681[13] = 1;
   out_4681646443276856681[14] = 0;
   out_4681646443276856681[15] = 0;
   out_4681646443276856681[16] = 0;
   out_4681646443276856681[17] = 0;
   out_4681646443276856681[18] = 0;
   out_4681646443276856681[19] = 0;
   out_4681646443276856681[20] = 0;
   out_4681646443276856681[21] = 0;
   out_4681646443276856681[22] = 0;
   out_4681646443276856681[23] = 0;
   out_4681646443276856681[24] = 0;
   out_4681646443276856681[25] = 0;
   out_4681646443276856681[26] = 0;
   out_4681646443276856681[27] = 0;
   out_4681646443276856681[28] = 0;
   out_4681646443276856681[29] = 0;
   out_4681646443276856681[30] = 0;
   out_4681646443276856681[31] = 0;
   out_4681646443276856681[32] = 0;
   out_4681646443276856681[33] = 1;
   out_4681646443276856681[34] = 0;
   out_4681646443276856681[35] = 0;
   out_4681646443276856681[36] = 1;
   out_4681646443276856681[37] = 0;
   out_4681646443276856681[38] = 0;
   out_4681646443276856681[39] = 0;
   out_4681646443276856681[40] = 0;
   out_4681646443276856681[41] = 0;
   out_4681646443276856681[42] = 0;
   out_4681646443276856681[43] = 0;
   out_4681646443276856681[44] = 0;
   out_4681646443276856681[45] = 0;
   out_4681646443276856681[46] = 0;
   out_4681646443276856681[47] = 0;
   out_4681646443276856681[48] = 0;
   out_4681646443276856681[49] = 0;
   out_4681646443276856681[50] = 0;
   out_4681646443276856681[51] = 0;
   out_4681646443276856681[52] = 0;
   out_4681646443276856681[53] = 0;
   out_4681646443276856681[54] = 0;
   out_4681646443276856681[55] = 0;
   out_4681646443276856681[56] = 1;
   out_4681646443276856681[57] = 0;
   out_4681646443276856681[58] = 0;
   out_4681646443276856681[59] = 1;
   out_4681646443276856681[60] = 0;
   out_4681646443276856681[61] = 0;
   out_4681646443276856681[62] = 0;
   out_4681646443276856681[63] = 0;
   out_4681646443276856681[64] = 0;
   out_4681646443276856681[65] = 0;
}
void h_9(double *state, double *unused, double *out_8732152029332626607) {
   out_8732152029332626607[0] = state[10];
   out_8732152029332626607[1] = state[11];
   out_8732152029332626607[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4922836089906447326) {
   out_4922836089906447326[0] = 0;
   out_4922836089906447326[1] = 0;
   out_4922836089906447326[2] = 0;
   out_4922836089906447326[3] = 0;
   out_4922836089906447326[4] = 0;
   out_4922836089906447326[5] = 0;
   out_4922836089906447326[6] = 0;
   out_4922836089906447326[7] = 0;
   out_4922836089906447326[8] = 0;
   out_4922836089906447326[9] = 0;
   out_4922836089906447326[10] = 1;
   out_4922836089906447326[11] = 0;
   out_4922836089906447326[12] = 0;
   out_4922836089906447326[13] = 0;
   out_4922836089906447326[14] = 0;
   out_4922836089906447326[15] = 0;
   out_4922836089906447326[16] = 0;
   out_4922836089906447326[17] = 0;
   out_4922836089906447326[18] = 0;
   out_4922836089906447326[19] = 0;
   out_4922836089906447326[20] = 0;
   out_4922836089906447326[21] = 0;
   out_4922836089906447326[22] = 0;
   out_4922836089906447326[23] = 0;
   out_4922836089906447326[24] = 0;
   out_4922836089906447326[25] = 0;
   out_4922836089906447326[26] = 0;
   out_4922836089906447326[27] = 0;
   out_4922836089906447326[28] = 0;
   out_4922836089906447326[29] = 0;
   out_4922836089906447326[30] = 0;
   out_4922836089906447326[31] = 0;
   out_4922836089906447326[32] = 0;
   out_4922836089906447326[33] = 1;
   out_4922836089906447326[34] = 0;
   out_4922836089906447326[35] = 0;
   out_4922836089906447326[36] = 0;
   out_4922836089906447326[37] = 0;
   out_4922836089906447326[38] = 0;
   out_4922836089906447326[39] = 0;
   out_4922836089906447326[40] = 0;
   out_4922836089906447326[41] = 0;
   out_4922836089906447326[42] = 0;
   out_4922836089906447326[43] = 0;
   out_4922836089906447326[44] = 0;
   out_4922836089906447326[45] = 0;
   out_4922836089906447326[46] = 0;
   out_4922836089906447326[47] = 0;
   out_4922836089906447326[48] = 0;
   out_4922836089906447326[49] = 0;
   out_4922836089906447326[50] = 0;
   out_4922836089906447326[51] = 0;
   out_4922836089906447326[52] = 0;
   out_4922836089906447326[53] = 0;
   out_4922836089906447326[54] = 0;
   out_4922836089906447326[55] = 0;
   out_4922836089906447326[56] = 1;
   out_4922836089906447326[57] = 0;
   out_4922836089906447326[58] = 0;
   out_4922836089906447326[59] = 0;
   out_4922836089906447326[60] = 0;
   out_4922836089906447326[61] = 0;
   out_4922836089906447326[62] = 0;
   out_4922836089906447326[63] = 0;
   out_4922836089906447326[64] = 0;
   out_4922836089906447326[65] = 0;
}
void h_10(double *state, double *unused, double *out_577731237262049607) {
   out_577731237262049607[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_577731237262049607[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_577731237262049607[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3790005931074958373) {
   out_3790005931074958373[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3790005931074958373[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3790005931074958373[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3790005931074958373[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3790005931074958373[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3790005931074958373[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3790005931074958373[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3790005931074958373[7] = 0;
   out_3790005931074958373[8] = 0;
   out_3790005931074958373[9] = 0;
   out_3790005931074958373[10] = 0;
   out_3790005931074958373[11] = 0;
   out_3790005931074958373[12] = 0;
   out_3790005931074958373[13] = 0;
   out_3790005931074958373[14] = 0;
   out_3790005931074958373[15] = 0;
   out_3790005931074958373[16] = 1;
   out_3790005931074958373[17] = 0;
   out_3790005931074958373[18] = 0;
   out_3790005931074958373[19] = 1;
   out_3790005931074958373[20] = 0;
   out_3790005931074958373[21] = 0;
   out_3790005931074958373[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3790005931074958373[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3790005931074958373[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3790005931074958373[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3790005931074958373[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3790005931074958373[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3790005931074958373[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3790005931074958373[29] = 0;
   out_3790005931074958373[30] = 0;
   out_3790005931074958373[31] = 0;
   out_3790005931074958373[32] = 0;
   out_3790005931074958373[33] = 0;
   out_3790005931074958373[34] = 0;
   out_3790005931074958373[35] = 0;
   out_3790005931074958373[36] = 0;
   out_3790005931074958373[37] = 0;
   out_3790005931074958373[38] = 0;
   out_3790005931074958373[39] = 1;
   out_3790005931074958373[40] = 0;
   out_3790005931074958373[41] = 0;
   out_3790005931074958373[42] = 1;
   out_3790005931074958373[43] = 0;
   out_3790005931074958373[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3790005931074958373[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3790005931074958373[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3790005931074958373[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3790005931074958373[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3790005931074958373[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3790005931074958373[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3790005931074958373[51] = 0;
   out_3790005931074958373[52] = 0;
   out_3790005931074958373[53] = 0;
   out_3790005931074958373[54] = 0;
   out_3790005931074958373[55] = 0;
   out_3790005931074958373[56] = 0;
   out_3790005931074958373[57] = 0;
   out_3790005931074958373[58] = 0;
   out_3790005931074958373[59] = 0;
   out_3790005931074958373[60] = 0;
   out_3790005931074958373[61] = 0;
   out_3790005931074958373[62] = 1;
   out_3790005931074958373[63] = 0;
   out_3790005931074958373[64] = 0;
   out_3790005931074958373[65] = 1;
}
void h_12(double *state, double *unused, double *out_4726645795282182541) {
   out_4726645795282182541[0] = state[0];
   out_4726645795282182541[1] = state[1];
   out_4726645795282182541[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8745641222400733140) {
   out_8745641222400733140[0] = 1;
   out_8745641222400733140[1] = 0;
   out_8745641222400733140[2] = 0;
   out_8745641222400733140[3] = 0;
   out_8745641222400733140[4] = 0;
   out_8745641222400733140[5] = 0;
   out_8745641222400733140[6] = 0;
   out_8745641222400733140[7] = 0;
   out_8745641222400733140[8] = 0;
   out_8745641222400733140[9] = 0;
   out_8745641222400733140[10] = 0;
   out_8745641222400733140[11] = 0;
   out_8745641222400733140[12] = 0;
   out_8745641222400733140[13] = 0;
   out_8745641222400733140[14] = 0;
   out_8745641222400733140[15] = 0;
   out_8745641222400733140[16] = 0;
   out_8745641222400733140[17] = 0;
   out_8745641222400733140[18] = 0;
   out_8745641222400733140[19] = 0;
   out_8745641222400733140[20] = 0;
   out_8745641222400733140[21] = 0;
   out_8745641222400733140[22] = 0;
   out_8745641222400733140[23] = 1;
   out_8745641222400733140[24] = 0;
   out_8745641222400733140[25] = 0;
   out_8745641222400733140[26] = 0;
   out_8745641222400733140[27] = 0;
   out_8745641222400733140[28] = 0;
   out_8745641222400733140[29] = 0;
   out_8745641222400733140[30] = 0;
   out_8745641222400733140[31] = 0;
   out_8745641222400733140[32] = 0;
   out_8745641222400733140[33] = 0;
   out_8745641222400733140[34] = 0;
   out_8745641222400733140[35] = 0;
   out_8745641222400733140[36] = 0;
   out_8745641222400733140[37] = 0;
   out_8745641222400733140[38] = 0;
   out_8745641222400733140[39] = 0;
   out_8745641222400733140[40] = 0;
   out_8745641222400733140[41] = 0;
   out_8745641222400733140[42] = 0;
   out_8745641222400733140[43] = 0;
   out_8745641222400733140[44] = 0;
   out_8745641222400733140[45] = 0;
   out_8745641222400733140[46] = 1;
   out_8745641222400733140[47] = 0;
   out_8745641222400733140[48] = 0;
   out_8745641222400733140[49] = 0;
   out_8745641222400733140[50] = 0;
   out_8745641222400733140[51] = 0;
   out_8745641222400733140[52] = 0;
   out_8745641222400733140[53] = 0;
   out_8745641222400733140[54] = 0;
   out_8745641222400733140[55] = 0;
   out_8745641222400733140[56] = 0;
   out_8745641222400733140[57] = 0;
   out_8745641222400733140[58] = 0;
   out_8745641222400733140[59] = 0;
   out_8745641222400733140[60] = 0;
   out_8745641222400733140[61] = 0;
   out_8745641222400733140[62] = 0;
   out_8745641222400733140[63] = 0;
   out_8745641222400733140[64] = 0;
   out_8745641222400733140[65] = 0;
}
void h_31(double *state, double *unused, double *out_1576013522014619042) {
   out_1576013522014619042[0] = state[7];
   out_1576013522014619042[1] = state[8];
   out_1576013522014619042[2] = state[9];
}
void H_31(double *state, double *unused, double *out_6000078190075719431) {
   out_6000078190075719431[0] = 0;
   out_6000078190075719431[1] = 0;
   out_6000078190075719431[2] = 0;
   out_6000078190075719431[3] = 0;
   out_6000078190075719431[4] = 0;
   out_6000078190075719431[5] = 0;
   out_6000078190075719431[6] = 0;
   out_6000078190075719431[7] = 1;
   out_6000078190075719431[8] = 0;
   out_6000078190075719431[9] = 0;
   out_6000078190075719431[10] = 0;
   out_6000078190075719431[11] = 0;
   out_6000078190075719431[12] = 0;
   out_6000078190075719431[13] = 0;
   out_6000078190075719431[14] = 0;
   out_6000078190075719431[15] = 0;
   out_6000078190075719431[16] = 0;
   out_6000078190075719431[17] = 0;
   out_6000078190075719431[18] = 0;
   out_6000078190075719431[19] = 0;
   out_6000078190075719431[20] = 0;
   out_6000078190075719431[21] = 0;
   out_6000078190075719431[22] = 0;
   out_6000078190075719431[23] = 0;
   out_6000078190075719431[24] = 0;
   out_6000078190075719431[25] = 0;
   out_6000078190075719431[26] = 0;
   out_6000078190075719431[27] = 0;
   out_6000078190075719431[28] = 0;
   out_6000078190075719431[29] = 0;
   out_6000078190075719431[30] = 1;
   out_6000078190075719431[31] = 0;
   out_6000078190075719431[32] = 0;
   out_6000078190075719431[33] = 0;
   out_6000078190075719431[34] = 0;
   out_6000078190075719431[35] = 0;
   out_6000078190075719431[36] = 0;
   out_6000078190075719431[37] = 0;
   out_6000078190075719431[38] = 0;
   out_6000078190075719431[39] = 0;
   out_6000078190075719431[40] = 0;
   out_6000078190075719431[41] = 0;
   out_6000078190075719431[42] = 0;
   out_6000078190075719431[43] = 0;
   out_6000078190075719431[44] = 0;
   out_6000078190075719431[45] = 0;
   out_6000078190075719431[46] = 0;
   out_6000078190075719431[47] = 0;
   out_6000078190075719431[48] = 0;
   out_6000078190075719431[49] = 0;
   out_6000078190075719431[50] = 0;
   out_6000078190075719431[51] = 0;
   out_6000078190075719431[52] = 0;
   out_6000078190075719431[53] = 1;
   out_6000078190075719431[54] = 0;
   out_6000078190075719431[55] = 0;
   out_6000078190075719431[56] = 0;
   out_6000078190075719431[57] = 0;
   out_6000078190075719431[58] = 0;
   out_6000078190075719431[59] = 0;
   out_6000078190075719431[60] = 0;
   out_6000078190075719431[61] = 0;
   out_6000078190075719431[62] = 0;
   out_6000078190075719431[63] = 0;
   out_6000078190075719431[64] = 0;
   out_6000078190075719431[65] = 0;
}
void h_32(double *state, double *unused, double *out_8457294058836217405) {
   out_8457294058836217405[0] = state[3];
   out_8457294058836217405[1] = state[4];
   out_8457294058836217405[2] = state[5];
   out_8457294058836217405[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3216420025657301838) {
   out_3216420025657301838[0] = 0;
   out_3216420025657301838[1] = 0;
   out_3216420025657301838[2] = 0;
   out_3216420025657301838[3] = 1;
   out_3216420025657301838[4] = 0;
   out_3216420025657301838[5] = 0;
   out_3216420025657301838[6] = 0;
   out_3216420025657301838[7] = 0;
   out_3216420025657301838[8] = 0;
   out_3216420025657301838[9] = 0;
   out_3216420025657301838[10] = 0;
   out_3216420025657301838[11] = 0;
   out_3216420025657301838[12] = 0;
   out_3216420025657301838[13] = 0;
   out_3216420025657301838[14] = 0;
   out_3216420025657301838[15] = 0;
   out_3216420025657301838[16] = 0;
   out_3216420025657301838[17] = 0;
   out_3216420025657301838[18] = 0;
   out_3216420025657301838[19] = 0;
   out_3216420025657301838[20] = 0;
   out_3216420025657301838[21] = 0;
   out_3216420025657301838[22] = 0;
   out_3216420025657301838[23] = 0;
   out_3216420025657301838[24] = 0;
   out_3216420025657301838[25] = 0;
   out_3216420025657301838[26] = 1;
   out_3216420025657301838[27] = 0;
   out_3216420025657301838[28] = 0;
   out_3216420025657301838[29] = 0;
   out_3216420025657301838[30] = 0;
   out_3216420025657301838[31] = 0;
   out_3216420025657301838[32] = 0;
   out_3216420025657301838[33] = 0;
   out_3216420025657301838[34] = 0;
   out_3216420025657301838[35] = 0;
   out_3216420025657301838[36] = 0;
   out_3216420025657301838[37] = 0;
   out_3216420025657301838[38] = 0;
   out_3216420025657301838[39] = 0;
   out_3216420025657301838[40] = 0;
   out_3216420025657301838[41] = 0;
   out_3216420025657301838[42] = 0;
   out_3216420025657301838[43] = 0;
   out_3216420025657301838[44] = 0;
   out_3216420025657301838[45] = 0;
   out_3216420025657301838[46] = 0;
   out_3216420025657301838[47] = 0;
   out_3216420025657301838[48] = 0;
   out_3216420025657301838[49] = 1;
   out_3216420025657301838[50] = 0;
   out_3216420025657301838[51] = 0;
   out_3216420025657301838[52] = 0;
   out_3216420025657301838[53] = 0;
   out_3216420025657301838[54] = 0;
   out_3216420025657301838[55] = 0;
   out_3216420025657301838[56] = 0;
   out_3216420025657301838[57] = 0;
   out_3216420025657301838[58] = 0;
   out_3216420025657301838[59] = 0;
   out_3216420025657301838[60] = 0;
   out_3216420025657301838[61] = 0;
   out_3216420025657301838[62] = 0;
   out_3216420025657301838[63] = 0;
   out_3216420025657301838[64] = 0;
   out_3216420025657301838[65] = 0;
   out_3216420025657301838[66] = 0;
   out_3216420025657301838[67] = 0;
   out_3216420025657301838[68] = 0;
   out_3216420025657301838[69] = 0;
   out_3216420025657301838[70] = 0;
   out_3216420025657301838[71] = 0;
   out_3216420025657301838[72] = 1;
   out_3216420025657301838[73] = 0;
   out_3216420025657301838[74] = 0;
   out_3216420025657301838[75] = 0;
   out_3216420025657301838[76] = 0;
   out_3216420025657301838[77] = 0;
   out_3216420025657301838[78] = 0;
   out_3216420025657301838[79] = 0;
   out_3216420025657301838[80] = 0;
   out_3216420025657301838[81] = 0;
   out_3216420025657301838[82] = 0;
   out_3216420025657301838[83] = 0;
   out_3216420025657301838[84] = 0;
   out_3216420025657301838[85] = 0;
   out_3216420025657301838[86] = 0;
   out_3216420025657301838[87] = 0;
}
void h_13(double *state, double *unused, double *out_5343902782053117618) {
   out_5343902782053117618[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5343902782053117618[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5343902782053117618[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1322613355155105198) {
   out_1322613355155105198[0] = 0;
   out_1322613355155105198[1] = 0;
   out_1322613355155105198[2] = 0;
   out_1322613355155105198[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1322613355155105198[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1322613355155105198[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1322613355155105198[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1322613355155105198[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1322613355155105198[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1322613355155105198[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1322613355155105198[10] = 0;
   out_1322613355155105198[11] = 0;
   out_1322613355155105198[12] = 0;
   out_1322613355155105198[13] = 0;
   out_1322613355155105198[14] = 0;
   out_1322613355155105198[15] = 0;
   out_1322613355155105198[16] = 0;
   out_1322613355155105198[17] = 0;
   out_1322613355155105198[18] = 0;
   out_1322613355155105198[19] = 0;
   out_1322613355155105198[20] = 0;
   out_1322613355155105198[21] = 0;
   out_1322613355155105198[22] = 0;
   out_1322613355155105198[23] = 0;
   out_1322613355155105198[24] = 0;
   out_1322613355155105198[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1322613355155105198[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1322613355155105198[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1322613355155105198[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1322613355155105198[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1322613355155105198[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1322613355155105198[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1322613355155105198[32] = 0;
   out_1322613355155105198[33] = 0;
   out_1322613355155105198[34] = 0;
   out_1322613355155105198[35] = 0;
   out_1322613355155105198[36] = 0;
   out_1322613355155105198[37] = 0;
   out_1322613355155105198[38] = 0;
   out_1322613355155105198[39] = 0;
   out_1322613355155105198[40] = 0;
   out_1322613355155105198[41] = 0;
   out_1322613355155105198[42] = 0;
   out_1322613355155105198[43] = 0;
   out_1322613355155105198[44] = 0;
   out_1322613355155105198[45] = 0;
   out_1322613355155105198[46] = 0;
   out_1322613355155105198[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1322613355155105198[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1322613355155105198[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1322613355155105198[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1322613355155105198[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1322613355155105198[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1322613355155105198[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1322613355155105198[54] = 0;
   out_1322613355155105198[55] = 0;
   out_1322613355155105198[56] = 0;
   out_1322613355155105198[57] = 0;
   out_1322613355155105198[58] = 0;
   out_1322613355155105198[59] = 0;
   out_1322613355155105198[60] = 0;
   out_1322613355155105198[61] = 0;
   out_1322613355155105198[62] = 0;
   out_1322613355155105198[63] = 0;
   out_1322613355155105198[64] = 0;
   out_1322613355155105198[65] = 0;
}
void h_14(double *state, double *unused, double *out_8732152029332626607) {
   out_8732152029332626607[0] = state[10];
   out_8732152029332626607[1] = state[11];
   out_8732152029332626607[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4922836089906447326) {
   out_4922836089906447326[0] = 0;
   out_4922836089906447326[1] = 0;
   out_4922836089906447326[2] = 0;
   out_4922836089906447326[3] = 0;
   out_4922836089906447326[4] = 0;
   out_4922836089906447326[5] = 0;
   out_4922836089906447326[6] = 0;
   out_4922836089906447326[7] = 0;
   out_4922836089906447326[8] = 0;
   out_4922836089906447326[9] = 0;
   out_4922836089906447326[10] = 1;
   out_4922836089906447326[11] = 0;
   out_4922836089906447326[12] = 0;
   out_4922836089906447326[13] = 0;
   out_4922836089906447326[14] = 0;
   out_4922836089906447326[15] = 0;
   out_4922836089906447326[16] = 0;
   out_4922836089906447326[17] = 0;
   out_4922836089906447326[18] = 0;
   out_4922836089906447326[19] = 0;
   out_4922836089906447326[20] = 0;
   out_4922836089906447326[21] = 0;
   out_4922836089906447326[22] = 0;
   out_4922836089906447326[23] = 0;
   out_4922836089906447326[24] = 0;
   out_4922836089906447326[25] = 0;
   out_4922836089906447326[26] = 0;
   out_4922836089906447326[27] = 0;
   out_4922836089906447326[28] = 0;
   out_4922836089906447326[29] = 0;
   out_4922836089906447326[30] = 0;
   out_4922836089906447326[31] = 0;
   out_4922836089906447326[32] = 0;
   out_4922836089906447326[33] = 1;
   out_4922836089906447326[34] = 0;
   out_4922836089906447326[35] = 0;
   out_4922836089906447326[36] = 0;
   out_4922836089906447326[37] = 0;
   out_4922836089906447326[38] = 0;
   out_4922836089906447326[39] = 0;
   out_4922836089906447326[40] = 0;
   out_4922836089906447326[41] = 0;
   out_4922836089906447326[42] = 0;
   out_4922836089906447326[43] = 0;
   out_4922836089906447326[44] = 0;
   out_4922836089906447326[45] = 0;
   out_4922836089906447326[46] = 0;
   out_4922836089906447326[47] = 0;
   out_4922836089906447326[48] = 0;
   out_4922836089906447326[49] = 0;
   out_4922836089906447326[50] = 0;
   out_4922836089906447326[51] = 0;
   out_4922836089906447326[52] = 0;
   out_4922836089906447326[53] = 0;
   out_4922836089906447326[54] = 0;
   out_4922836089906447326[55] = 0;
   out_4922836089906447326[56] = 1;
   out_4922836089906447326[57] = 0;
   out_4922836089906447326[58] = 0;
   out_4922836089906447326[59] = 0;
   out_4922836089906447326[60] = 0;
   out_4922836089906447326[61] = 0;
   out_4922836089906447326[62] = 0;
   out_4922836089906447326[63] = 0;
   out_4922836089906447326[64] = 0;
   out_4922836089906447326[65] = 0;
}
void h_33(double *state, double *unused, double *out_8179746101716890928) {
   out_8179746101716890928[0] = state[16];
   out_8179746101716890928[1] = state[17];
   out_8179746101716890928[2] = state[18];
}
void H_33(double *state, double *unused, double *out_7247878568421229955) {
   out_7247878568421229955[0] = 0;
   out_7247878568421229955[1] = 0;
   out_7247878568421229955[2] = 0;
   out_7247878568421229955[3] = 0;
   out_7247878568421229955[4] = 0;
   out_7247878568421229955[5] = 0;
   out_7247878568421229955[6] = 0;
   out_7247878568421229955[7] = 0;
   out_7247878568421229955[8] = 0;
   out_7247878568421229955[9] = 0;
   out_7247878568421229955[10] = 0;
   out_7247878568421229955[11] = 0;
   out_7247878568421229955[12] = 0;
   out_7247878568421229955[13] = 0;
   out_7247878568421229955[14] = 0;
   out_7247878568421229955[15] = 0;
   out_7247878568421229955[16] = 1;
   out_7247878568421229955[17] = 0;
   out_7247878568421229955[18] = 0;
   out_7247878568421229955[19] = 0;
   out_7247878568421229955[20] = 0;
   out_7247878568421229955[21] = 0;
   out_7247878568421229955[22] = 0;
   out_7247878568421229955[23] = 0;
   out_7247878568421229955[24] = 0;
   out_7247878568421229955[25] = 0;
   out_7247878568421229955[26] = 0;
   out_7247878568421229955[27] = 0;
   out_7247878568421229955[28] = 0;
   out_7247878568421229955[29] = 0;
   out_7247878568421229955[30] = 0;
   out_7247878568421229955[31] = 0;
   out_7247878568421229955[32] = 0;
   out_7247878568421229955[33] = 0;
   out_7247878568421229955[34] = 0;
   out_7247878568421229955[35] = 0;
   out_7247878568421229955[36] = 0;
   out_7247878568421229955[37] = 0;
   out_7247878568421229955[38] = 0;
   out_7247878568421229955[39] = 1;
   out_7247878568421229955[40] = 0;
   out_7247878568421229955[41] = 0;
   out_7247878568421229955[42] = 0;
   out_7247878568421229955[43] = 0;
   out_7247878568421229955[44] = 0;
   out_7247878568421229955[45] = 0;
   out_7247878568421229955[46] = 0;
   out_7247878568421229955[47] = 0;
   out_7247878568421229955[48] = 0;
   out_7247878568421229955[49] = 0;
   out_7247878568421229955[50] = 0;
   out_7247878568421229955[51] = 0;
   out_7247878568421229955[52] = 0;
   out_7247878568421229955[53] = 0;
   out_7247878568421229955[54] = 0;
   out_7247878568421229955[55] = 0;
   out_7247878568421229955[56] = 0;
   out_7247878568421229955[57] = 0;
   out_7247878568421229955[58] = 0;
   out_7247878568421229955[59] = 0;
   out_7247878568421229955[60] = 0;
   out_7247878568421229955[61] = 0;
   out_7247878568421229955[62] = 1;
   out_7247878568421229955[63] = 0;
   out_7247878568421229955[64] = 0;
   out_7247878568421229955[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2197647651745530361) {
  H(in_vec, out_2197647651745530361);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_410081131431810136) {
  err_fun(nom_x, delta_x, out_410081131431810136);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_8196087757170391419) {
  inv_err_fun(nom_x, true_x, out_8196087757170391419);
}
void live_H_mod_fun(double *state, double *out_4506999560653098295) {
  H_mod_fun(state, out_4506999560653098295);
}
void live_f_fun(double *state, double dt, double *out_3475354349641466463) {
  f_fun(state,  dt, out_3475354349641466463);
}
void live_F_fun(double *state, double dt, double *out_6177591270598375438) {
  F_fun(state,  dt, out_6177591270598375438);
}
void live_h_4(double *state, double *unused, double *out_3343835946944536111) {
  h_4(state, unused, out_3343835946944536111);
}
void live_H_4(double *state, double *unused, double *out_4681646443276856681) {
  H_4(state, unused, out_4681646443276856681);
}
void live_h_9(double *state, double *unused, double *out_8732152029332626607) {
  h_9(state, unused, out_8732152029332626607);
}
void live_H_9(double *state, double *unused, double *out_4922836089906447326) {
  H_9(state, unused, out_4922836089906447326);
}
void live_h_10(double *state, double *unused, double *out_577731237262049607) {
  h_10(state, unused, out_577731237262049607);
}
void live_H_10(double *state, double *unused, double *out_3790005931074958373) {
  H_10(state, unused, out_3790005931074958373);
}
void live_h_12(double *state, double *unused, double *out_4726645795282182541) {
  h_12(state, unused, out_4726645795282182541);
}
void live_H_12(double *state, double *unused, double *out_8745641222400733140) {
  H_12(state, unused, out_8745641222400733140);
}
void live_h_31(double *state, double *unused, double *out_1576013522014619042) {
  h_31(state, unused, out_1576013522014619042);
}
void live_H_31(double *state, double *unused, double *out_6000078190075719431) {
  H_31(state, unused, out_6000078190075719431);
}
void live_h_32(double *state, double *unused, double *out_8457294058836217405) {
  h_32(state, unused, out_8457294058836217405);
}
void live_H_32(double *state, double *unused, double *out_3216420025657301838) {
  H_32(state, unused, out_3216420025657301838);
}
void live_h_13(double *state, double *unused, double *out_5343902782053117618) {
  h_13(state, unused, out_5343902782053117618);
}
void live_H_13(double *state, double *unused, double *out_1322613355155105198) {
  H_13(state, unused, out_1322613355155105198);
}
void live_h_14(double *state, double *unused, double *out_8732152029332626607) {
  h_14(state, unused, out_8732152029332626607);
}
void live_H_14(double *state, double *unused, double *out_4922836089906447326) {
  H_14(state, unused, out_4922836089906447326);
}
void live_h_33(double *state, double *unused, double *out_8179746101716890928) {
  h_33(state, unused, out_8179746101716890928);
}
void live_H_33(double *state, double *unused, double *out_7247878568421229955) {
  H_33(state, unused, out_7247878568421229955);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
